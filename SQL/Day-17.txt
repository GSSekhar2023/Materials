12-apr-23

 CONVERT() :- 
 -------------------

               CONVERT(TARGET-TYPE,SOURCE-VALUE)

    SELECT CONVERT(INT,10.5) 


 => diff b/w cast & convert ? 

    1   using convert function we can display dates in different formats but not possible using
         cast function

    2 using convert function we can display money in different formats but not possible using
      cast function 

    Displaying dates in different formats :- 
   --------------------------------------------------
 
         CONVERT(VARCHAR,DATE,STYLE NUMBER)

 EX :- 

     SELECT  CONVERT(VARCHAR,GETDATE(),101)   =>   04/12/2023
                                                                             102    =>   2023.04.12
                                                                             103    =>   12/04/2023
       
                                                                             112    =>   20230412
                                      
                                                                             114   =>    16:30:13:880

  
   display  ENAME    HIREDATE   ?  display hiredates in DD.MM.YYYY format ?

   
   SELECT  ENAME,CONVERT(VARCHAR,HIREDATE,104) AS HIREDATE FROM EMP 
                  
     
 Money Styles :-  
 ---------------------

 0  =>  2 digits after decimal                                 (1000.00)
 1  =>  displays number with thousand seperator  (1,000.00)
 2  =>  4 digits after decimal                                  (1000.0000)

 display  ENAME  SAL  ?  display salaries with thousand seperator ?
 
 SELECT  ENAME,CONVERT(VARCHAR,SAL,1) AS SAL FROM EMP 

 Special functions :- 
 --------------------------

  ISNULL() :-  
  ----------------

  => used to convert null values 

               ISNULL(arg1,arg2)

         if arg1 = null returns arg2
         if arg1 <> null returns arg1 only

      SELECT ISNULL(100,200)     =>    100
      SELECT ISNULL(NULL,200)  =>    200

 => display  ENAME  SAL    COMM   TOTSAL   ?

             TOTSAL = SAL + COMM 
 
      SELECT ENAME,SAL,COMM, SAL+COMM AS TOTSAL FROM EMP 
 
      smith    1000      500         1500
      jones    2975      NULL       NULL

       SELECT ENAME,SAL,COMM, SAL+ISNULL(COMM,0) AS TOTSAL FROM EMP 
  
 	 smith    1000      500         1500
     	 jones    2975      NULL      2975

   => display   ENAME  SAL   COMM  ?   if COMM = NULL display  NO COMM ?

 	SELECT ENAME,SAL,
     	        ISNULL(CAST(COMM AS VARCHAR),'NO COMM') AS COMM
 	FROM EMP  
   
 Analytical Functions :- 
-----------------------------

 RANK & DENSE_RANK :- 
 ----------------------------------

 =>  both functions  are used to find ranks
 =>  ranking is always based on some field
 =>  for rank functions data must be sorted 

    syn :-   RANK() OVER  (ORDER BY  COLNME  ASC/DESC , --------)
                DENSE_RANK() OVER (ORDER BY COLNAME ASC/DESC,-----)

  =>  display ranks of the employees based on sal and highest paid employee should get
        1st rank ?

       SELECT  ENAME,SAL,
                       RANK() OVER (ORDER BY  SAL DESC) AS RNK
       FROM EMP 
        
         	 
     difference between  rank & dense_rank  functions ? 
   
    1    rank function generates gaps but dense_rank will not generate gaps.
 
    2    rank function ranks may not be in sequence but in dense_rank
          ranks are always in sequence.

	        SAL		RANK		DENSE_RANK
 	        5000		1		1
                        4000		2		2
                        3000		3		3
                        3000		3		3
                        3000		3		3
                        2000		6		4
                        2000		6		4
                        1000		8		5

 =>  display ranks of the employees based on sal , if salaries are same 
       then ranking should be based on hiredate ?

       SELECT  ename,hiredate,sal,
                      DENSE_RANK() OVER (ORDER BY sal DESC,
                                                                               hiredate ASC) as rnk
       FROM emp 

 Question :- 
 -----------------

  STUDENT
  SNO  SNAME  M   P   C
  1       A             80  90  70
  2       B             60  50  70
  3       C             90  80  70
  4       D             90  70  80

 => find the ranks of the students based on avg desc,m desc,p desc ?


  PARTITION BY clause :- 
  --------------------------------

  => used to find ranks with in group ,